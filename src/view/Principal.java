/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CFOPController;
import controller.ClienteController;
import controller.ExpedicaoController;
import controller.ProdutoController;
import controller.TransacaoController;
import enums.TipoNota;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.Date;
import java.sql.SQLException;
import java.sql.Time;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;
import model.CFOP;
import model.Cliente;
import model.ClienteTableModel;
import model.Expedicao;
import model.ExpedicaoTableModel;
import model.Item;
import model.ItemTableModel;
import model.Produto;
import model.ProdutoTableModel;
import model.Transacao;
import model.TransacaoRelatorioTableModel;
import model.TransacaoTableModel;
import renderer.HoraCellRenderer;
import renderer.LocalDateRenderer;
import util.DataConverter;
import static util.DataValidator.isDataValid;
import util.GerarCodigoAleatorio;
import util.Moeda;
import util.Numero;

/**
 *
 * @author Edson
 */
public final class Principal extends javax.swing.JFrame {

    private final ProdutoController produtoController;
    private final TransacaoController transacaoController;
    private final ClienteController clienteController;
    private int idDessaTransacao = 0;
    private String motorista = "";
    String informacoesComplementares = "";

    /**
     * Creates new form DashBoard
     *
     * @throws java.sql.SQLException
     */
    public Principal() throws SQLException {
        initComponents();
        produtoController = new ProdutoController();
        transacaoController = new TransacaoController();
        clienteController = new ClienteController();
        chamaPainel(1);
        carregaTabelaExpedicao(99);
        populaTransacao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnTela = new javax.swing.JPanel();
        spMenuLateral = new javax.swing.JScrollPane();
        pnMenuLateral = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblSubTitulo = new javax.swing.JLabel();
        lblDashBoard = new javax.swing.JLabel();
        lblProdutos = new javax.swing.JLabel();
        lblTransacoes = new javax.swing.JLabel();
        lblRelatorios = new javax.swing.JLabel();
        lblSairSistema = new javax.swing.JLabel();
        lblConfiguracoes = new javax.swing.JLabel();
        pnPrincipal = new javax.swing.JPanel();
        pncPrincipal = new javax.swing.JLayeredPane();
        pnExpedicao = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbExpedicao = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        lblPendente = new javax.swing.JLabel();
        pnExpedicaoEmPreparacao = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        lblPreparacao = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblCriado = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        pnExpedicaoTodas = new javax.swing.JPanel();
        lblExpedicaoTodasTitulo = new javax.swing.JLabel();
        lblExpedicaoTodasSubTitulo = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        lblPronto = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        lblAguardando = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        lblEnviado = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        pnProduto = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbProduto = new javax.swing.JTable();
        btnNovo = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        pnTransacao = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbTransacoes = new javax.swing.JTable();
        btnNovaTransacao = new javax.swing.JButton();
        txtBuscarTransacao = new javax.swing.JTextField();
        btnBuscarTransacoes = new javax.swing.JButton();
        cbSelecionaTipoTransacao = new javax.swing.JComboBox<>();
        pnRelatorio = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbRelatorio = new javax.swing.JTable();
        txtBuscarRelatorio = new javax.swing.JTextField();
        btnBuscarRelatorio = new javax.swing.JButton();
        cbSelecionaTipoTransacaoRelatorio = new javax.swing.JComboBox<>();
        pnConfiguracao = new javax.swing.JPanel();
        pnConfiguracoesUnidades = new javax.swing.JPanel();
        lblConfiguracoesUnidades = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblConfiguracoesCfop = new javax.swing.JLabel();
        pnConfiguracoesNcm = new javax.swing.JPanel();
        lblConfiguracoesNcm = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblEmpresas = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        pnNovaTransacao = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbItemTransacao = new javax.swing.JTable();
        cbTipoTransacao = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cbCfop = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cbCliente = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtTransacaoNota = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTransacaoChave = new javax.swing.JTextField();
        txtTransacaoData = new javax.swing.JTextField();
        txtTransacaoHora = new javax.swing.JTextField();
        btnTransacaoPegaData = new javax.swing.JButton();
        btnTransacaoPegaHora = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtIdProdutoTransacao = new javax.swing.JTextField();
        cbTransacaoProduto = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        btnAdicionarProdutoTransacao = new javax.swing.JButton();
        btnSalvarTransacao = new javax.swing.JButton();
        btnAdicionarObservacao = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        lblItensValorTotal = new javax.swing.JLabel();
        pnAzul = new javax.swing.JPanel();
        pnEmpresa = new javax.swing.JPanel();
        lblTituloCliente = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbCliente = new javax.swing.JTable();
        btnNovoCliente = new javax.swing.JButton();
        txtBuscarCliente = new javax.swing.JTextField();
        btnBuscaCliente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnTela.setBackground(new java.awt.Color(255, 255, 255));
        pnTela.setPreferredSize(new java.awt.Dimension(1200, 550));

        spMenuLateral.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        pnMenuLateral.setBackground(new java.awt.Color(153, 153, 255));
        pnMenuLateral.setPreferredSize(new java.awt.Dimension(290, 540));

        lblTitulo.setFont(new java.awt.Font("Tahoma", 3, 26)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Sys Estoque");

        lblSubTitulo.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        lblSubTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubTitulo.setText("Swing 2023");

        lblDashBoard.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblDashBoard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-casa-22.png"))); // NOI18N
        lblDashBoard.setText("DASHBOARD");
        lblDashBoard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblDashBoard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDashBoardMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblDashBoardMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblDashBoardMouseExited(evt);
            }
        });

        lblProdutos.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblProdutos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-produto-22.png"))); // NOI18N
        lblProdutos.setText("PRODUTOS");
        lblProdutos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblProdutosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblProdutosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblProdutosMouseExited(evt);
            }
        });

        lblTransacoes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTransacoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-transacao-22.png"))); // NOI18N
        lblTransacoes.setText("TRANSAÇÕES");
        lblTransacoes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblTransacoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTransacoesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblTransacoesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblTransacoesMouseExited(evt);
            }
        });

        lblRelatorios.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblRelatorios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-relatorio-22.png"))); // NOI18N
        lblRelatorios.setText("RELATÓRIOS");
        lblRelatorios.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblRelatorios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRelatoriosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblRelatoriosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblRelatoriosMouseExited(evt);
            }
        });

        lblSairSistema.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSairSistema.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-sair-22.png"))); // NOI18N
        lblSairSistema.setText("SAIR");
        lblSairSistema.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblSairSistema.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSairSistemaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblSairSistemaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSairSistemaMouseExited(evt);
            }
        });

        lblConfiguracoes.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblConfiguracoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-configuracao-22.png"))); // NOI18N
        lblConfiguracoes.setText("CONFIGURAÇÕES");
        lblConfiguracoes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblConfiguracoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblConfiguracoesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblConfiguracoesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblConfiguracoesMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnMenuLateralLayout = new javax.swing.GroupLayout(pnMenuLateral);
        pnMenuLateral.setLayout(pnMenuLateralLayout);
        pnMenuLateralLayout.setHorizontalGroup(
            pnMenuLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnMenuLateralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnMenuLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSubTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTitulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnMenuLateralLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnMenuLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblDashBoard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTransacoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblRelatorios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblConfiguracoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSairSistema, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 34, Short.MAX_VALUE)))
                .addGap(32, 32, 32))
        );
        pnMenuLateralLayout.setVerticalGroup(
            pnMenuLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnMenuLateralLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSubTitulo)
                .addGap(86, 86, 86)
                .addComponent(lblDashBoard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTransacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRelatorios, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblConfiguracoes, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                .addComponent(lblSairSistema, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        spMenuLateral.setViewportView(pnMenuLateral);

        pnPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        pnPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        pnExpedicao.setBackground(new java.awt.Color(255, 255, 255));

        tbExpedicao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Número da nota", "Cliente", "Data", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbExpedicao.getTableHeader().setReorderingAllowed(false);
        tbExpedicao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbExpedicaoMouseClicked(evt);
            }
        });
        tbExpedicao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbExpedicaoKeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(tbExpedicao);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel7MouseExited(evt);
            }
        });

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Pendente");

        lblPendente.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        lblPendente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPendente.setText("0");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPendente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPendente, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addContainerGap())
        );

        pnExpedicaoEmPreparacao.setBackground(new java.awt.Color(255, 255, 255));
        pnExpedicaoEmPreparacao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnExpedicaoEmPreparacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnExpedicaoEmPreparacaoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnExpedicaoEmPreparacaoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnExpedicaoEmPreparacaoMouseExited(evt);
            }
        });

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Em preparação");

        lblPreparacao.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        lblPreparacao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPreparacao.setText("0");

        javax.swing.GroupLayout pnExpedicaoEmPreparacaoLayout = new javax.swing.GroupLayout(pnExpedicaoEmPreparacao);
        pnExpedicaoEmPreparacao.setLayout(pnExpedicaoEmPreparacaoLayout);
        pnExpedicaoEmPreparacaoLayout.setHorizontalGroup(
            pnExpedicaoEmPreparacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnExpedicaoEmPreparacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnExpedicaoEmPreparacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPreparacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnExpedicaoEmPreparacaoLayout.setVerticalGroup(
            pnExpedicaoEmPreparacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnExpedicaoEmPreparacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPreparacao, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel1MouseExited(evt);
            }
        });

        lblCriado.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        lblCriado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCriado.setText("0");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Criado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCriado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCriado, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addContainerGap())
        );

        pnExpedicaoTodas.setBackground(new java.awt.Color(255, 255, 255));
        pnExpedicaoTodas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pnExpedicaoTodas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnExpedicaoTodasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnExpedicaoTodasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pnExpedicaoTodasMouseExited(evt);
            }
        });
        pnExpedicaoTodas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pnExpedicaoTodasKeyPressed(evt);
            }
        });

        lblExpedicaoTodasTitulo.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        lblExpedicaoTodasTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExpedicaoTodasTitulo.setText("Todas");

        lblExpedicaoTodasSubTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExpedicaoTodasSubTitulo.setText("Saidas");

        javax.swing.GroupLayout pnExpedicaoTodasLayout = new javax.swing.GroupLayout(pnExpedicaoTodas);
        pnExpedicaoTodas.setLayout(pnExpedicaoTodasLayout);
        pnExpedicaoTodasLayout.setHorizontalGroup(
            pnExpedicaoTodasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnExpedicaoTodasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnExpedicaoTodasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblExpedicaoTodasTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(lblExpedicaoTodasSubTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnExpedicaoTodasLayout.setVerticalGroup(
            pnExpedicaoTodasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnExpedicaoTodasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblExpedicaoTodasTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblExpedicaoTodasSubTitulo)
                .addContainerGap())
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel10MouseExited(evt);
            }
        });

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Pronto");

        lblPronto.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        lblPronto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPronto.setText("0");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPronto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPronto, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel22)
                .addContainerGap())
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel11MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel11MouseExited(evt);
            }
        });

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Aguardando");

        lblAguardando.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        lblAguardando.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAguardando.setText("0");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAguardando, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAguardando, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addContainerGap())
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel12MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel12MouseExited(evt);
            }
        });

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Enviado");

        lblEnviado.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        lblEnviado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEnviado.setText("0");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEnviado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEnviado, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel24)
                .addContainerGap())
        );

        jLabel12.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("EXPEDIÇÃO");

        javax.swing.GroupLayout pnExpedicaoLayout = new javax.swing.GroupLayout(pnExpedicao);
        pnExpedicao.setLayout(pnExpedicaoLayout);
        pnExpedicaoLayout.setHorizontalGroup(
            pnExpedicaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnExpedicaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnExpedicaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5)
                    .addGroup(pnExpedicaoLayout.createSequentialGroup()
                        .addComponent(pnExpedicaoTodas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnExpedicaoEmPreparacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnExpedicaoLayout.setVerticalGroup(
            pnExpedicaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnExpedicaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnExpedicaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnExpedicaoEmPreparacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnExpedicaoTodas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnExpedicaoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel1, jPanel10, jPanel11, jPanel12, jPanel7, pnExpedicaoEmPreparacao, pnExpedicaoTodas});

        pnProduto.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 2, 36)); // NOI18N
        jLabel2.setText("PRODUTOS");

        tbProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descrição", "Unidade", "Valor", "NCM", "Observação", "Ativo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProduto.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbProduto.getTableHeader().setReorderingAllowed(false);
        tbProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProdutoMouseClicked(evt);
            }
        });
        tbProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbProdutoKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbProduto);
        if (tbProduto.getColumnModel().getColumnCount() > 0) {
            tbProduto.getColumnModel().getColumn(3).setResizable(false);
            tbProduto.getColumnModel().getColumn(4).setResizable(false);
            tbProduto.getColumnModel().getColumn(5).setResizable(false);
            tbProduto.getColumnModel().getColumn(6).setResizable(false);
        }

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-adicionar-30.png"))); // NOI18N
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        txtBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-pesquisar-30.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnProdutoLayout = new javax.swing.GroupLayout(pnProduto);
        pnProduto.setLayout(pnProdutoLayout);
        pnProdutoLayout.setHorizontalGroup(
            pnProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnProdutoLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnProdutoLayout.createSequentialGroup()
                        .addComponent(btnNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 385, Short.MAX_VALUE)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)))
                .addContainerGap())
        );
        pnProdutoLayout.setVerticalGroup(
            pnProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNovo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnProdutoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBuscar, btnNovo, txtBuscar});

        pnTransacao.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 2, 36)); // NOI18N
        jLabel3.setText("TRANSAÇÕES");

        tbTransacoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tipo", "CFOP", "Cliente", "Nota", "Chave", "Data", "Hora"
            }
        ));
        tbTransacoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbTransacoesMouseClicked(evt);
            }
        });
        tbTransacoes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbTransacoesKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tbTransacoes);
        if (tbTransacoes.getColumnModel().getColumnCount() > 0) {
            tbTransacoes.getColumnModel().getColumn(0).setHeaderValue("#");
            tbTransacoes.getColumnModel().getColumn(1).setHeaderValue("Produto");
            tbTransacoes.getColumnModel().getColumn(2).setHeaderValue("Unidade");
            tbTransacoes.getColumnModel().getColumn(3).setHeaderValue("Valor");
            tbTransacoes.getColumnModel().getColumn(4).setHeaderValue("Quantidade");
            tbTransacoes.getColumnModel().getColumn(5).setHeaderValue("Complemento");
            tbTransacoes.getColumnModel().getColumn(6).setHeaderValue("Total Item");
            tbTransacoes.getColumnModel().getColumn(7).setHeaderValue("Hora");
        }

        btnNovaTransacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-adicionar-30.png"))); // NOI18N
        btnNovaTransacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovaTransacaoActionPerformed(evt);
            }
        });

        txtBuscarTransacao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtBuscarTransacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarTransacaoKeyReleased(evt);
            }
        });

        btnBuscarTransacoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-pesquisar-30.png"))); // NOI18N
        btnBuscarTransacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarTransacoesActionPerformed(evt);
            }
        });

        cbSelecionaTipoTransacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODAS", "ENTRADAS", "SAIDAS" }));

        javax.swing.GroupLayout pnTransacaoLayout = new javax.swing.GroupLayout(pnTransacao);
        pnTransacao.setLayout(pnTransacaoLayout);
        pnTransacaoLayout.setHorizontalGroup(
            pnTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTransacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(pnTransacaoLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnTransacaoLayout.createSequentialGroup()
                        .addComponent(btnNovaTransacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 270, Short.MAX_VALUE)
                        .addComponent(cbSelecionaTipoTransacao, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscarTransacao, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarTransacoes)))
                .addContainerGap())
        );
        pnTransacaoLayout.setVerticalGroup(
            pnTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTransacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBuscarTransacoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtBuscarTransacao)
                    .addComponent(cbSelecionaTipoTransacao)
                    .addComponent(btnNovaTransacao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel14.setFont(new java.awt.Font("Liberation Sans", 2, 36)); // NOI18N
        jLabel14.setText("RELATÓRIOS");

        tbRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbRelatorio.getTableHeader().setReorderingAllowed(false);
        tbRelatorio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbRelatorioMouseClicked(evt);
            }
        });
        tbRelatorio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbRelatorioKeyReleased(evt);
            }
        });
        jScrollPane6.setViewportView(tbRelatorio);

        txtBuscarRelatorio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtBuscarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarRelatorioActionPerformed(evt);
            }
        });
        txtBuscarRelatorio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarRelatorioKeyReleased(evt);
            }
        });

        btnBuscarRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-pesquisar-30.png"))); // NOI18N
        btnBuscarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarRelatorioActionPerformed(evt);
            }
        });

        cbSelecionaTipoTransacaoRelatorio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODAS", "ENTRADAS", "SAIDAS" }));

        javax.swing.GroupLayout pnRelatorioLayout = new javax.swing.GroupLayout(pnRelatorio);
        pnRelatorio.setLayout(pnRelatorioLayout);
        pnRelatorioLayout.setHorizontalGroup(
            pnRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnRelatorioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnRelatorioLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 965, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnRelatorioLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cbSelecionaTipoTransacaoRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarRelatorio)))
                .addContainerGap())
        );
        pnRelatorioLayout.setVerticalGroup(
            pnRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnRelatorioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBuscarRelatorio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnRelatorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBuscarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbSelecionaTipoTransacaoRelatorio)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE))
        );

        pnRelatorioLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBuscarRelatorio, cbSelecionaTipoTransacaoRelatorio, txtBuscarRelatorio});

        pnConfiguracao.setBackground(new java.awt.Color(255, 255, 255));

        pnConfiguracoesUnidades.setBackground(new java.awt.Color(255, 255, 255));
        pnConfiguracoesUnidades.setPreferredSize(new java.awt.Dimension(268, 268));

        lblConfiguracoesUnidades.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConfiguracoesUnidades.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-peso-50.png"))); // NOI18N
        lblConfiguracoesUnidades.setText("UNIDADES");
        lblConfiguracoesUnidades.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblConfiguracoesUnidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblConfiguracoesUnidadesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblConfiguracoesUnidadesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblConfiguracoesUnidadesMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnConfiguracoesUnidadesLayout = new javax.swing.GroupLayout(pnConfiguracoesUnidades);
        pnConfiguracoesUnidades.setLayout(pnConfiguracoesUnidadesLayout);
        pnConfiguracoesUnidadesLayout.setHorizontalGroup(
            pnConfiguracoesUnidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnConfiguracoesUnidadesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblConfiguracoesUnidades, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnConfiguracoesUnidadesLayout.setVerticalGroup(
            pnConfiguracoesUnidadesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnConfiguracoesUnidadesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblConfiguracoesUnidades, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        lblConfiguracoesCfop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConfiguracoesCfop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-cortar-50.png"))); // NOI18N
        lblConfiguracoesCfop.setText("CFOP");
        lblConfiguracoesCfop.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblConfiguracoesCfop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblConfiguracoesCfopMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblConfiguracoesCfopMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblConfiguracoesCfopMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblConfiguracoesCfop, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblConfiguracoesCfop, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnConfiguracoesNcm.setBackground(new java.awt.Color(255, 255, 255));

        lblConfiguracoesNcm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConfiguracoesNcm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-fita-de-bookmark-50.png"))); // NOI18N
        lblConfiguracoesNcm.setText("NCM");
        lblConfiguracoesNcm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblConfiguracoesNcm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblConfiguracoesNcmMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblConfiguracoesNcmMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblConfiguracoesNcmMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnConfiguracoesNcmLayout = new javax.swing.GroupLayout(pnConfiguracoesNcm);
        pnConfiguracoesNcm.setLayout(pnConfiguracoesNcmLayout);
        pnConfiguracoesNcmLayout.setHorizontalGroup(
            pnConfiguracoesNcmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnConfiguracoesNcmLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblConfiguracoesNcm, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnConfiguracoesNcmLayout.setVerticalGroup(
            pnConfiguracoesNcmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnConfiguracoesNcmLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblConfiguracoesNcm, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        lblEmpresas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmpresas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-organização-50.png"))); // NOI18N
        lblEmpresas.setText("EMPRESAS");
        lblEmpresas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblEmpresasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblEmpresasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblEmpresasMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEmpresas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEmpresas, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnConfiguracaoLayout = new javax.swing.GroupLayout(pnConfiguracao);
        pnConfiguracao.setLayout(pnConfiguracaoLayout);
        pnConfiguracaoLayout.setHorizontalGroup(
            pnConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnConfiguracaoLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(pnConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnConfiguracoesUnidades, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnConfiguracoesNcm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );
        pnConfiguracaoLayout.setVerticalGroup(
            pnConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnConfiguracaoLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnConfiguracoesNcm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnConfiguracoesUnidades, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnConfiguracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(62, 62, 62))
        );

        pnNovaTransacao.setBackground(new java.awt.Color(255, 255, 255));

        tbItemTransacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbItemTransacao.getTableHeader().setReorderingAllowed(false);
        tbItemTransacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbItemTransacaoKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tbItemTransacao);

        jLabel1.setText("TIPO");

        cbCfop.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbCfopKeyReleased(evt);
            }
        });

        jLabel4.setText("CFOP");

        cbCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbClienteKeyReleased(evt);
            }
        });

        jLabel5.setText("CLIENTE/FORNECEDOR");

        jLabel6.setText("NOTA");

        jLabel7.setText("CHAVE");

        btnTransacaoPegaData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-calendário-24.png"))); // NOI18N
        btnTransacaoPegaData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransacaoPegaDataActionPerformed(evt);
            }
        });

        btnTransacaoPegaHora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-tempo-24.png"))); // NOI18N
        btnTransacaoPegaHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransacaoPegaHoraActionPerformed(evt);
            }
        });

        jLabel8.setText("DATA");

        jLabel9.setText("HORA");

        jLabel10.setText("ID");

        txtIdProdutoTransacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdProdutoTransacaoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdProdutoTransacaoKeyReleased(evt);
            }
        });

        cbTransacaoProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTransacaoProdutoItemStateChanged(evt);
            }
        });
        cbTransacaoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTransacaoProdutoActionPerformed(evt);
            }
        });
        cbTransacaoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbTransacaoProdutoKeyReleased(evt);
            }
        });

        jLabel11.setText("PRODUTO");

        btnAdicionarProdutoTransacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-adicionar-24.png"))); // NOI18N
        btnAdicionarProdutoTransacao.setText("ADICIONAR");
        btnAdicionarProdutoTransacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarProdutoTransacaoActionPerformed(evt);
            }
        });

        btnSalvarTransacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-salvar-22.png"))); // NOI18N
        btnSalvarTransacao.setText("SALVAR");
        btnSalvarTransacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarTransacaoActionPerformed(evt);
            }
        });

        btnAdicionarObservacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-marcador-24.png"))); // NOI18N
        btnAdicionarObservacao.setText("ADICIONAR OBSERVAÇÃO");
        btnAdicionarObservacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarObservacaoActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Liberation Sans", 3, 24)); // NOI18N
        jLabel13.setText("ADICIONAR UMA TRANSAÇÃO");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-sair-24.png"))); // NOI18N
        jButton6.setText("VOLTAR");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        lblItensValorTotal.setText(" ");

        javax.swing.GroupLayout pnNovaTransacaoLayout = new javax.swing.GroupLayout(pnNovaTransacao);
        pnNovaTransacao.setLayout(pnNovaTransacaoLayout);
        pnNovaTransacaoLayout.setHorizontalGroup(
            pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnNovaTransacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 893, Short.MAX_VALUE)
                    .addGroup(pnNovaTransacaoLayout.createSequentialGroup()
                        .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtTransacaoNota)
                                .addComponent(cbTipoTransacao, javax.swing.GroupLayout.Alignment.LEADING, 0, 129, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnNovaTransacaoLayout.createSequentialGroup()
                                .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbCfop, 0, 230, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnNovaTransacaoLayout.createSequentialGroup()
                                .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTransacaoChave)
                                    .addGroup(pnNovaTransacaoLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnNovaTransacaoLayout.createSequentialGroup()
                                        .addComponent(txtTransacaoData)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnTransacaoPegaData))
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnNovaTransacaoLayout.createSequentialGroup()
                                        .addComponent(txtTransacaoHora, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnTransacaoPegaHora))
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(pnNovaTransacaoLayout.createSequentialGroup()
                        .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIdProdutoTransacao, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbTransacaoProduto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addComponent(btnAdicionarProdutoTransacao))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnNovaTransacaoLayout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblItensValorTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionarObservacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvarTransacao)))
                .addContainerGap())
        );
        pnNovaTransacaoLayout.setVerticalGroup(
            pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnNovaTransacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(22, 22, 22)
                .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTipoTransacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCfop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTransacaoNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTransacaoChave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTransacaoData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTransacaoHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTransacaoPegaData)
                    .addComponent(btnTransacaoPegaHora))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdProdutoTransacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTransacaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarProdutoTransacao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnNovaTransacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarTransacao)
                    .addComponent(btnAdicionarObservacao)
                    .addComponent(jButton6)
                    .addComponent(lblItensValorTotal))
                .addContainerGap())
        );

        pnNovaTransacaoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdicionarProdutoTransacao, cbTransacaoProduto, txtIdProdutoTransacao});

        pnNovaTransacaoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnTransacaoPegaData, btnTransacaoPegaHora, cbCfop, cbCliente, cbTipoTransacao, txtTransacaoChave, txtTransacaoData, txtTransacaoHora, txtTransacaoNota});

        pnAzul.setBackground(new java.awt.Color(0, 0, 255));

        javax.swing.GroupLayout pnAzulLayout = new javax.swing.GroupLayout(pnAzul);
        pnAzul.setLayout(pnAzulLayout);
        pnAzulLayout.setHorizontalGroup(
            pnAzulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 965, Short.MAX_VALUE)
        );
        pnAzulLayout.setVerticalGroup(
            pnAzulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 534, Short.MAX_VALUE)
        );

        pnEmpresa.setBackground(new java.awt.Color(255, 255, 255));

        lblTituloCliente.setFont(new java.awt.Font("Liberation Sans", 2, 36)); // NOI18N
        lblTituloCliente.setText("EMPRESAS");

        tbCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tipo Cliente", "CNPJ", "Razão Social", "Nome Fantasia", "Inscrição Estadual", "Inscrição Municipal", "Endereço", "Contato", "Responsável Legal", "Tipo Empresa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCliente.getTableHeader().setReorderingAllowed(false);
        tbCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbClienteMouseClicked(evt);
            }
        });
        tbCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbClienteKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(tbCliente);

        btnNovoCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-adicionar-30.png"))); // NOI18N
        btnNovoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoClienteActionPerformed(evt);
            }
        });

        txtBuscarCliente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtBuscarCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarClienteKeyReleased(evt);
            }
        });

        btnBuscaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-pesquisar-30.png"))); // NOI18N
        btnBuscaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnEmpresaLayout = new javax.swing.GroupLayout(pnEmpresa);
        pnEmpresa.setLayout(pnEmpresaLayout);
        pnEmpresaLayout.setHorizontalGroup(
            pnEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnEmpresaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(pnEmpresaLayout.createSequentialGroup()
                        .addComponent(lblTituloCliente)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnEmpresaLayout.createSequentialGroup()
                        .addComponent(btnNovoCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 367, Short.MAX_VALUE)
                        .addComponent(txtBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscaCliente)))
                .addContainerGap())
        );
        pnEmpresaLayout.setVerticalGroup(
            pnEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnEmpresaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTituloCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBuscaCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtBuscarCliente)
                    .addComponent(btnNovoCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                .addContainerGap())
        );

        pncPrincipal.setLayer(pnExpedicao, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pncPrincipal.setLayer(pnProduto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pncPrincipal.setLayer(pnTransacao, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pncPrincipal.setLayer(pnRelatorio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pncPrincipal.setLayer(pnConfiguracao, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pncPrincipal.setLayer(pnNovaTransacao, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pncPrincipal.setLayer(pnAzul, javax.swing.JLayeredPane.DEFAULT_LAYER);
        pncPrincipal.setLayer(pnEmpresa, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout pncPrincipalLayout = new javax.swing.GroupLayout(pncPrincipal);
        pncPrincipal.setLayout(pncPrincipalLayout);
        pncPrincipalLayout.setHorizontalGroup(
            pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pncPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnExpedicao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnTransacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnRelatorio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnConfiguracao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(pnNovaTransacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(6, 6, 6)))
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnAzul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(pnEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(12, 12, 12)))
        );
        pncPrincipalLayout.setVerticalGroup(
            pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pncPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnExpedicao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnTransacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnRelatorio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(pnConfiguracao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(9, 9, 9)))
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(pnNovaTransacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(9, 9, 9)))
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnAzul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(pncPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pncPrincipalLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(pnEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(12, 12, 12)))
        );

        javax.swing.GroupLayout pnPrincipalLayout = new javax.swing.GroupLayout(pnPrincipal);
        pnPrincipal.setLayout(pnPrincipalLayout);
        pnPrincipalLayout.setHorizontalGroup(
            pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pncPrincipal)
        );
        pnPrincipalLayout.setVerticalGroup(
            pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pncPrincipal)
        );

        javax.swing.GroupLayout pnTelaLayout = new javax.swing.GroupLayout(pnTela);
        pnTela.setLayout(pnTelaLayout);
        pnTelaLayout.setHorizontalGroup(
            pnTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTelaLayout.createSequentialGroup()
                .addComponent(spMenuLateral, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnTelaLayout.setVerticalGroup(
            pnTelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spMenuLateral, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
            .addGroup(pnTelaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnTela, javax.swing.GroupLayout.DEFAULT_SIZE, 1268, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnTela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblDashBoardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDashBoardMouseExited
        lblDashBoard.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblDashBoardMouseExited

    private void lblDashBoardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDashBoardMouseEntered
        lblDashBoard.setForeground(Color.yellow);
    }//GEN-LAST:event_lblDashBoardMouseEntered

    private void lblProdutosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblProdutosMouseEntered
        lblProdutos.setForeground(Color.yellow);
    }//GEN-LAST:event_lblProdutosMouseEntered

    private void lblProdutosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblProdutosMouseExited
        lblProdutos.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblProdutosMouseExited

    private void lblTransacoesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTransacoesMouseEntered
        lblTransacoes.setForeground(Color.yellow);
    }//GEN-LAST:event_lblTransacoesMouseEntered

    private void lblTransacoesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTransacoesMouseExited
        lblTransacoes.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblTransacoesMouseExited

    private void lblRelatoriosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRelatoriosMouseEntered
        lblRelatorios.setForeground(Color.yellow);
    }//GEN-LAST:event_lblRelatoriosMouseEntered

    private void lblRelatoriosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRelatoriosMouseExited
        lblRelatorios.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblRelatoriosMouseExited

    private void lblSairSistemaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSairSistemaMouseEntered
        lblSairSistema.setForeground(Color.yellow);
    }//GEN-LAST:event_lblSairSistemaMouseEntered

    private void lblSairSistemaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSairSistemaMouseExited
        lblSairSistema.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblSairSistemaMouseExited

    private void lblConfiguracoesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracoesMouseEntered
        lblConfiguracoes.setForeground(Color.yellow);
    }//GEN-LAST:event_lblConfiguracoesMouseEntered

    private void lblConfiguracoesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracoesMouseExited
        lblConfiguracoes.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblConfiguracoesMouseExited

    private void lblSairSistemaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSairSistemaMouseClicked
        eventoSairPrograma();
    }//GEN-LAST:event_lblSairSistemaMouseClicked

    private void lblDashBoardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDashBoardMouseClicked
        chamaPainel(1);
        carregaTabelaExpedicao(99);
    }//GEN-LAST:event_lblDashBoardMouseClicked

    private void lblProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblProdutosMouseClicked
        chamaPainel(2);
        produtoController.popularProdutos();
        carregaTabelaProduto();

    }//GEN-LAST:event_lblProdutosMouseClicked

    private void lblTransacoesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTransacoesMouseClicked
        chamaPainel(3);
        carregaTabelaTransacao();
    }//GEN-LAST:event_lblTransacoesMouseClicked

    private void lblRelatoriosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRelatoriosMouseClicked
        chamaPainel(4);
        carregarTabelaRelatorio("");

    }//GEN-LAST:event_lblRelatoriosMouseClicked

    private void lblConfiguracoesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracoesMouseClicked
        chamaPainel(5);
    }//GEN-LAST:event_lblConfiguracoesMouseClicked

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnBuscar.doClick();
        }
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            btnNovo.doClick();
        }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        ProdutoDialog produtoDialog = null;
        try {
            produtoDialog = new ProdutoDialog(this, rootPaneCheckingEnabled);
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        produtoDialog.setVisible(true);
        produtoController.popularProdutos();
        carregaTabelaProduto();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnNovaTransacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovaTransacaoActionPerformed
        chamaPainel(6);
        try {
            populaProdutos();
            populaCbProduto("");
            populaCbCfop();
            populaCbCliente();
            mostraBotoesTransacao(true);
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNovaTransacaoActionPerformed

    private void txtBuscarTransacaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarTransacaoKeyReleased
        if (evt.getKeyCode() == evt.VK_ENTER) {
            btnBuscarTransacoes.doClick();
        }
    }//GEN-LAST:event_txtBuscarTransacaoKeyReleased

    private void cbTransacaoProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbTransacaoProdutoKeyReleased
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (cbTransacaoProduto.getSelectedItem() == null) {
                System.out.println("produto:::: vazio");
            } else {
                btnAdicionarProdutoTransacao.requestFocus();
                System.out.println("produto selecionado::: " + cbTransacaoProduto.getSelectedItem());
            }
        }
        if (evt.getKeyCode() == evt.VK_F2) {
            String busca = "";
            busca = JOptionPane.showInputDialog(null, "DIGITE UMA BUSCA", "BUSCANDO...",
                    JOptionPane.DEFAULT_OPTION);
            System.out.println("BUSCA:::" + busca);
            if (busca == null) {
                busca = "";
            } else {
                try {
                    populaCbProduto(busca);
                    txtIdProdutoTransacao.setText("");
                    btnAdicionarProdutoTransacao.requestFocus();
                } catch (SQLException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        if (evt.getKeyCode() == evt.VK_F1) {
            Produto p = (Produto) cbTransacaoProduto.getSelectedItem();
            JOptionPane.showMessageDialog(null, "ID: " + p.getId()
                    + "\nProduto: " + p.getDescricao()
                    + "\nUnidade: " + p.getUnidade().getDescricao()
                    + "\nNcm: " + p.getNcm()
                    + "\nValor: " + Moeda.formatadorDeMoeda("" + p.getValor())
                    + "\nObservação: \n" + p.getObservacao()
            //                            .substring(0, 100)
            //                    + "\n" + p.getObservacao().substring(100,200)
            //                    + "\n" + p.getObservacao().substring(200,300)
            //                    + "\n" + p.getObservacao().substring(300)
            );
        }
    }//GEN-LAST:event_cbTransacaoProdutoKeyReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (transacaoController.listarItens().size() >= 1 || idDessaTransacao != 0) {
            Object[] options = {"Sim", "Não"};
            if (JOptionPane.showOptionDialog(null, "Ao sair limpar campos? ",
                    "Aviso", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
                    null, options, options[0]) == 0) {
                transacaoController.limparItens();
                carregarTabelaItemTransacao();
                limparCamposTransacao();
                liberarCamposTransacao(true);
            }
        } else {
            liberarCamposTransacao(true);
        }
        chamaPainel(3);
        carregaTabelaTransacao();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void lblConfiguracoesUnidadesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracoesUnidadesMouseExited
        lblConfiguracoesUnidades.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblConfiguracoesUnidadesMouseExited

    private void lblConfiguracoesUnidadesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracoesUnidadesMouseEntered
        lblConfiguracoesUnidades.setForeground(Color.GREEN);
    }//GEN-LAST:event_lblConfiguracoesUnidadesMouseEntered

    private void lblConfiguracoesUnidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracoesUnidadesMouseClicked
        UnidadeDialog unidadeDialog = null;
        try {
            unidadeDialog = new UnidadeDialog(this, rootPaneCheckingEnabled);
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        unidadeDialog.setVisible(true);
    }//GEN-LAST:event_lblConfiguracoesUnidadesMouseClicked

    private void lblConfiguracoesNcmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracoesNcmMouseClicked
        NcmDialog ncmDialog = null;
        try {
            ncmDialog = new NcmDialog(this, rootPaneCheckingEnabled);
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        ncmDialog.setVisible(true);
    }//GEN-LAST:event_lblConfiguracoesNcmMouseClicked

    private void lblConfiguracoesNcmMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracoesNcmMouseEntered
        lblConfiguracoesNcm.setForeground(Color.GREEN);
    }//GEN-LAST:event_lblConfiguracoesNcmMouseEntered

    private void lblConfiguracoesNcmMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracoesNcmMouseExited
        lblConfiguracoesNcm.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblConfiguracoesNcmMouseExited

    private void lblConfiguracoesCfopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracoesCfopMouseClicked
        CfopDialog cfopDialog = null;
        try {
            cfopDialog = new CfopDialog(this, rootPaneCheckingEnabled);
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        cfopDialog.setVisible(true);
    }//GEN-LAST:event_lblConfiguracoesCfopMouseClicked

    private void lblConfiguracoesCfopMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracoesCfopMouseEntered
        lblConfiguracoesCfop.setForeground(Color.GREEN);
    }//GEN-LAST:event_lblConfiguracoesCfopMouseEntered

    private void lblConfiguracoesCfopMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfiguracoesCfopMouseExited
        lblConfiguracoesCfop.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblConfiguracoesCfopMouseExited

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        carregaTabelaProduto();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tbProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProdutoMouseClicked

        int columnIndex = tbProduto.getSelectedColumn(); // Obtenha populaProdutos linha selecionada na tabela

        if (columnIndex == 0) {
            if (evt.getClickCount() == 2) { // Verifica se foi um duplo clique
                Object[] options = {"Confirmar", "Cancelar"};
                if (JOptionPane.showOptionDialog(null, "Clique Confirmar para alterar",
                        "Informação", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
                        null, options, options[1]) == 0) {
                    int rowIndex = tbProduto.getSelectedRow(); // Obtenha populaProdutos linha selecionada na tabela
                    int idProduto = (int) tbProduto.getValueAt(rowIndex, 0); // Obtenha o ID da primeira coluna (coluna 0)

                    Produto produto = produtoController.obterProdutoPorId(idProduto);

                    ProdutoDialog produtoDialog = null;

                    try {
                        produtoDialog = new ProdutoDialog(this, rootPaneCheckingEnabled);
                        produtoDialog.recebeProduto(produto);
                    } catch (SQLException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    produtoDialog.setVisible(true);
                    produtoController.popularProdutos();
                    carregaTabelaProduto();

                }
            }
        }

        if (columnIndex == 6) {
            int rowIndex = tbProduto.getSelectedRow(); // Obtenha populaProdutos linha selecionada na tabela
            int idProduto = (int) tbProduto.getValueAt(rowIndex, 0); // Obtenha o ID da primeira coluna (coluna 0) 
            boolean ativo = (boolean) tbProduto.getValueAt(rowIndex, 6); // Obtenha o ID da primeira coluna (coluna 0)
            produtoController.ativaProduto(idProduto, !ativo);
            produtoController.popularProdutos();
            carregaTabelaProduto();
        }

    }//GEN-LAST:event_tbProdutoMouseClicked

    private void tbProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbProdutoKeyReleased
        if (evt.getKeyCode() == evt.VK_DELETE) {
            int rowIndex = tbProduto.getSelectedRow(); // Obtenha populaProdutos linha selecionada na tabela
            int idProduto = (int) tbProduto.getValueAt(rowIndex, 0); // Obtenha o ID da primeira coluna (coluna 0)

            Object[] options = {"Confirmar", "Cancelar"};
            if (JOptionPane.showOptionDialog(null, "Deseja realmente deletar " + idProduto,
                    "Aviso", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
                    null, options, options[1]) == 0) {
                // Gerar um código aleatório
                String codigoDeConfirmacaoAleatorio = GerarCodigoAleatorio.gerarCodigoAleatorio();
                // Exibir um JOptionPane para obter o código
                String codigoDeConfirmacao = JOptionPane.showInputDialog(null,
                        "Insira o código de 4 dígitos: " + codigoDeConfirmacaoAleatorio,
                        "Confirmação", JOptionPane.WARNING_MESSAGE);
                // Comparar os códigos
                if (codigoDeConfirmacao != null && codigoDeConfirmacao.length() == 4
                        && codigoDeConfirmacao.equals(codigoDeConfirmacaoAleatorio)) {
                    produtoController.marcarProdutoComoDeletado(idProduto);
                    System.out.println("deletando - " + idProduto);
                    produtoController.popularProdutos();
                    carregaTabelaProduto();
                } else {
                    JOptionPane.showMessageDialog(null, "Código incorreto ou invalido.");
                }

            }

        }
    }//GEN-LAST:event_tbProdutoKeyReleased

    private void btnSalvarTransacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarTransacaoActionPerformed
        if (idDessaTransacao != 0) {
            Object[] options = {"Sim", "Não"};
            if (JOptionPane.showOptionDialog(null, "Deseja realmente gerar uma cópia? ",
                    "Cópia", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,
                    null, options, options[1]) == 0) {
                // Gerar um código aleatório
                String codigoDeConfirmacaoAleatorio = GerarCodigoAleatorio.gerarCodigoAleatorio();
                // Exibir um JOptionPane para obter o código
                String codigoDeConfirmacao = JOptionPane.showInputDialog(null,
                        "Insira o código de 4 dígitos: " + codigoDeConfirmacaoAleatorio,
                        "Confirmação", JOptionPane.WARNING_MESSAGE);
                // Comparar os códigos
                if (codigoDeConfirmacao != null && codigoDeConfirmacao.length() == 4
                        && codigoDeConfirmacao.equals(codigoDeConfirmacaoAleatorio)) {
                    liberarCamposTransacao(true);
                    btnSalvarTransacao.setText("SALVAR");
                    idDessaTransacao = 0;
                    Object[] optionsSecundaria = {"Sim", "Não"};
                    if (JOptionPane.showOptionDialog(null,
                            "Deseja  cópiar também as informações complementares? ",
                            "Cópia de informações complementares",
                            JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,
                            null, optionsSecundaria, optionsSecundaria[1]) == 1) {
                        motorista = "";
                        informacoesComplementares = "";
                    }
                    JOptionPane.showMessageDialog(rootPane,
                            "Cópia gerada com sucesso\nAltere os dados da transação e os itens necessários.");
                } else {
                    JOptionPane.showMessageDialog(null, "Código incorreto ou invalido.");
                }
            }
        } else {
            if (transacaoController.listarItens().size() >= 1) {
                salvarTransacao();
            } else {
                JOptionPane.showMessageDialog(null,
                        "Não é possível salvar uma transacão vazia.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSalvarTransacaoActionPerformed


    private void txtIdProdutoTransacaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdProdutoTransacaoKeyReleased
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (Numero.isNumeroValido(txtIdProdutoTransacao.getText())) {
                System.out.println("é numero");
                DefaultComboBoxModel<Produto> model = new DefaultComboBoxModel<>();
                int idProdutoTransacao = Integer.parseInt(txtIdProdutoTransacao.getText());
                Produto produto = produtoController.obterProdutoPorId(idProdutoTransacao);
                if (produto != null) {
                    model.addElement(produto);
                    cbTransacaoProduto.setModel(model);
                    btnAdicionarProdutoTransacao.requestFocus();
                }
            } else {
                System.out.println("nao é numero");
                try {
                    populaCbProduto("");
                    txtIdProdutoTransacao.setText("");
                    btnAdicionarProdutoTransacao.requestFocus();
                } catch (SQLException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_txtIdProdutoTransacaoKeyReleased

    private void cbTransacaoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTransacaoProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTransacaoProdutoActionPerformed

    private void cbTransacaoProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTransacaoProdutoItemStateChanged
        Produto produto = (Produto) cbTransacaoProduto.getSelectedItem();
        if (produto != null) {
            txtIdProdutoTransacao.setText("" + produto.getId());
        }
    }//GEN-LAST:event_cbTransacaoProdutoItemStateChanged

    private void txtIdProdutoTransacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdProdutoTransacaoKeyPressed
        if (evt.getKeyCode() == evt.VK_F2) {
            String busca = "";
            busca = JOptionPane.showInputDialog(null, "DIGITE UMA BUSCA", "BUSCANDO...",
                    JOptionPane.DEFAULT_OPTION);
            System.out.println("BUSCA:::" + busca);
            if (busca == null) {
                busca = "";
            }
            try {
                populaCbProduto(busca);
                txtIdProdutoTransacao.setText("");
                btnAdicionarProdutoTransacao.requestFocus();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_txtIdProdutoTransacaoKeyPressed

    private void btnAdicionarProdutoTransacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarProdutoTransacaoActionPerformed
        if ((Produto) cbTransacaoProduto.getSelectedItem() != null) {
            ItemDialog itemDialog = new ItemDialog(this, rootPaneCheckingEnabled, (Produto) cbTransacaoProduto.getSelectedItem());
            itemDialog.setVisible(true);
            try {
                Item item = new Item(
                        (Produto) cbTransacaoProduto.getSelectedItem(),
                        "" + itemDialog.getTxtComplemento().getText().toUpperCase(),
                        new BigDecimal("" + itemDialog.getTxtQuantidade().getText().replace(",", ".")),
                        (TipoNota) cbTipoTransacao.getSelectedItem());
                transacaoController.adicionarItem(item);
                carregarTabelaItemTransacao();
            } catch (Exception e) {
                System.out.println("ERRO====>>>>" + e);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Produto inválido!");
        }
    }//GEN-LAST:event_btnAdicionarProdutoTransacaoActionPerformed

    private void btnBuscarTransacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarTransacoesActionPerformed
        carregaTabelaTransacao();
    }//GEN-LAST:event_btnBuscarTransacoesActionPerformed

    private void btnTransacaoPegaDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransacaoPegaDataActionPerformed
// Obtém a data atual
        LocalDate dataAtual = LocalDate.now();
// Define o formato desejado
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
// Formata a data
        String dataFormatada = dataAtual.format(formatter);
// Coloca a data formatada no JTextField
        txtTransacaoData.setText(dataFormatada);
    }//GEN-LAST:event_btnTransacaoPegaDataActionPerformed

    private void btnTransacaoPegaHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransacaoPegaHoraActionPerformed

// Obtém a hora atual
        LocalTime horaAtual = LocalTime.now();

// Define o formato desejado
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");

// Formata a hora
        String horaFormatada = horaAtual.format(formatter);

// Coloca a hora formatada no JTextField
        txtTransacaoHora.setText(horaFormatada);
    }//GEN-LAST:event_btnTransacaoPegaHoraActionPerformed

    private void tbTransacoesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbTransacoesKeyReleased
        if (evt.getKeyCode() == evt.VK_DELETE) {
            int rowIndex = tbTransacoes.getSelectedRow(); // Obtenha populaProdutos linha selecionada na tabela
            int idMovimento = (int) tbTransacoes.getValueAt(rowIndex, 0); // Obtenha o ID da primeira coluna (coluna 0)

            Object[] options = {"Confirmar", "Cancelar"};
            if (JOptionPane.showOptionDialog(null, "Deseja realmente deletar " + idMovimento,
                    "Aviso", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
                    null, options, options[1]) == 0) {
                // Gerar um código aleatório
                String codigoDeConfirmacaoAleatorio = GerarCodigoAleatorio.gerarCodigoAleatorio();
                // Exibir um JOptionPane para obter o código
                String codigoDeConfirmacao = JOptionPane.showInputDialog(null,
                        "Insira o código de 4 dígitos: " + codigoDeConfirmacaoAleatorio,
                        "Confirmação", JOptionPane.WARNING_MESSAGE);
                // Comparar os códigos
                if (codigoDeConfirmacao != null && codigoDeConfirmacao.length() == 4
                        && codigoDeConfirmacao.equals(codigoDeConfirmacaoAleatorio)) {
                    transacaoController.marcarTransacaoComoDeletado(idMovimento);
                    System.out.println("deletando - " + idMovimento);
                    carregaTabelaTransacao();
                } else {
                    JOptionPane.showMessageDialog(null, "Código incorreto ou invalido.");
                }
            }
        }
    }//GEN-LAST:event_tbTransacoesKeyReleased

    private void tbTransacoesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbTransacoesMouseClicked
        int columnIndex = tbTransacoes.getSelectedColumn(); // Obtenha populaProdutos linha selecionada na tabela
        if (columnIndex == 0) {
            if (evt.getClickCount() == 2) { // Verifica se foi um duplo clique
                Object[] options = {"Confirmar", "Cancelar"};
                if (JOptionPane.showOptionDialog(null, "Clique Confirmar para exibir",
                        "Informação", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
                        null, options, options[1]) == 0) {
                    int rowIndex = tbTransacoes.getSelectedRow();
                    int idTransacao = (int) tbTransacoes.getValueAt(rowIndex, 0);
                    Transacao transacao = transacaoController.obterTransacaoPorId(idTransacao);
                    chamaPainel(6);
                    transacaoController.limparItens();
                    carregarCamposTransacao(transacao);
                    liberarCamposTransacao(false);
                    btnSalvarTransacao.setText("Gerar uma cópia");
                    mostraBotoesTransacao(true);
                }
            }
        }
    }//GEN-LAST:event_tbTransacoesMouseClicked

    private void tbItemTransacaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbItemTransacaoKeyReleased
        if (evt.getKeyCode() == evt.VK_DELETE) {
            int rowIndex = tbItemTransacao.getSelectedRow(); // Obtenha populaProdutos linha selecionada na tabela
            int idItem = (int) tbItemTransacao.getValueAt(rowIndex, 0); // Obtenha o ID da primeira coluna (coluna 0)

            Object[] options = {"Confirmar", "Cancelar"};
            if (JOptionPane.showOptionDialog(null, "Deseja realmente deletar " + idItem,
                    "Aviso", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
                    null, options, options[1]) == 0) {
                transacaoController.excluirUmItens(idItem);
                System.out.println("deletando item - " + idItem);
                carregarTabelaItemTransacao();
            }
        }
    }//GEN-LAST:event_tbItemTransacaoKeyReleased

    private void btnAdicionarObservacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarObservacaoActionPerformed
        InformacoesComplementaresDialog informacoesComplementaresDialog = null;
        try {
            informacoesComplementaresDialog = new InformacoesComplementaresDialog(this, rootPaneCheckingEnabled, motorista, informacoesComplementares, idDessaTransacao);
            informacoesComplementaresDialog.setVisible(true);
            informacoesComplementares = informacoesComplementaresDialog.informacao;
            motorista = informacoesComplementaresDialog.motorista;
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnAdicionarObservacaoActionPerformed

    private void cbCfopKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbCfopKeyReleased
        if (evt.getKeyCode() == evt.VK_F5) {
            try {
                populaCbCfop();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cbCfopKeyReleased

    private void cbClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbClienteKeyReleased
        if (evt.getKeyCode() == evt.VK_F5) {
            try {
                populaCbCliente();
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cbClienteKeyReleased

    private void tbClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbClienteMouseClicked
        int columnIndex = tbCliente.getSelectedColumn(); // Obtenha populaProdutos linha selecionada na tabela
        if (columnIndex == 0) {
            if (evt.getClickCount() == 2) { // Verifica se foi um duplo clique
                Object[] options = {"Confirmar", "Cancelar"};
                if (JOptionPane.showOptionDialog(null, "Clique Confirmar para exibir",
                        "Informação", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
                        null, options, options[1]) == 0) {
                    int rowIndex = tbCliente.getSelectedRow();
                    int idCliente = (int) tbCliente.getValueAt(rowIndex, 0);
                    Cliente cliente = clienteController.obterClientePorId(idCliente);

                    EmpresaDialog empresaDialog = null;
                    try {
                        empresaDialog = new EmpresaDialog(this, rootPaneCheckingEnabled, cliente);
                        empresaDialog.setVisible(true);
                        carregaTabelaEmpresa();
                    } catch (SQLException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_tbClienteMouseClicked

    private void tbClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbClienteKeyReleased

        if (evt.getKeyCode() == evt.VK_DELETE) {
            int rowIndex = tbCliente.getSelectedRow(); // Obtenha populaProdutos linha selecionada na tabela
            int idCliente = (int) tbCliente.getValueAt(rowIndex, 0); // Obtenha o ID da primeira coluna (coluna 0)

            Object[] options = {"Confirmar", "Cancelar"};
            if (JOptionPane.showOptionDialog(null, "Deseja realmente deletar " + idCliente,
                    "Aviso", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE,
                    null, options, options[1]) == 0) {
                // Gerar um código aleatório
                String codigoDeConfirmacaoAleatorio = GerarCodigoAleatorio.gerarCodigoAleatorio();
                // Exibir um JOptionPane para obter o código
                String codigoDeConfirmacao = JOptionPane.showInputDialog(null,
                        "Insira o código de 4 dígitos: " + codigoDeConfirmacaoAleatorio,
                        "Confirmação", JOptionPane.WARNING_MESSAGE);
                // Comparar os códigos
                if (codigoDeConfirmacao != null && codigoDeConfirmacao.length() == 4
                        && codigoDeConfirmacao.equals(codigoDeConfirmacaoAleatorio)) {
                    clienteController.marcarClienteComoDeletado(idCliente);
                    System.out.println("deletando - " + idCliente);
                    carregaTabelaEmpresa();
                } else {
                    JOptionPane.showMessageDialog(null, "Código incorreto ou invalido.");
                }
            }
        }
    }//GEN-LAST:event_tbClienteKeyReleased

    private void btnNovoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoClienteActionPerformed
        EmpresaDialog empresaDialog = null;
        try {
            empresaDialog = new EmpresaDialog(this, rootPaneCheckingEnabled);
            empresaDialog.setVisible(true);
            carregaTabelaEmpresa();
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnNovoClienteActionPerformed

    private void txtBuscarClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarClienteKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarClienteKeyReleased

    private void btnBuscaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaClienteActionPerformed
        carregaTabelaEmpresa();
    }//GEN-LAST:event_btnBuscaClienteActionPerformed

    private void lblEmpresasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEmpresasMouseEntered
        lblEmpresas.setForeground(Color.GREEN);
    }//GEN-LAST:event_lblEmpresasMouseEntered

    private void lblEmpresasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEmpresasMouseExited
        lblEmpresas.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblEmpresasMouseExited

    private void lblEmpresasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEmpresasMouseClicked
        chamaPainel(8);
        carregaTabelaEmpresa();
    }//GEN-LAST:event_lblEmpresasMouseClicked

    private void tbExpedicaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbExpedicaoMouseClicked
        int columnIndex = tbExpedicao.getSelectedColumn(); // Obtenha populaProdutos linha selecionada na tabela
//        if (columnIndex == 0) {
        if (evt.getClickCount() == 2) {
            try {

                int rowIndex = tbExpedicao.getSelectedRow();
                int idExpedicao = (int) tbExpedicao.getValueAt(rowIndex, 0);

                Transacao transacao = transacaoController.obterTransacaoPorId(idExpedicao);

                ExpedicaoDialog expedicaoDialog;
                expedicaoDialog = new ExpedicaoDialog(null, rootPaneCheckingEnabled, transacao);

                expedicaoDialog.setVisible(true);
                carregaTabelaExpedicao(99);
                exibeTransacao(expedicaoDialog.exibirId);
            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
//        }
    }//GEN-LAST:event_tbExpedicaoMouseClicked

    private void pnExpedicaoTodasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pnExpedicaoTodasKeyPressed

    }//GEN-LAST:event_pnExpedicaoTodasKeyPressed

    private void pnExpedicaoTodasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnExpedicaoTodasMouseClicked
        carregaTabelaExpedicao(99);
    }//GEN-LAST:event_pnExpedicaoTodasMouseClicked

    private void pnExpedicaoTodasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnExpedicaoTodasMouseEntered
        pnExpedicaoTodas.setBackground(new Color(153, 153, 255, 70));
    }//GEN-LAST:event_pnExpedicaoTodasMouseEntered

    private void pnExpedicaoTodasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnExpedicaoTodasMouseExited
        pnExpedicaoTodas.setBackground(Color.WHITE);
    }//GEN-LAST:event_pnExpedicaoTodasMouseExited

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        jPanel1.setBackground(new Color(153, 153, 255, 70));
    }//GEN-LAST:event_jPanel1MouseEntered

    private void jPanel7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseEntered
        jPanel7.setBackground(new Color(153, 153, 255, 70));
    }//GEN-LAST:event_jPanel7MouseEntered

    private void pnExpedicaoEmPreparacaoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnExpedicaoEmPreparacaoMouseEntered
        pnExpedicaoEmPreparacao.setBackground(new Color(153, 153, 255, 70));
    }//GEN-LAST:event_pnExpedicaoEmPreparacaoMouseEntered

    private void jPanel11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel11MouseEntered
        jPanel11.setBackground(new Color(153, 153, 255, 70));
    }//GEN-LAST:event_jPanel11MouseEntered

    private void jPanel10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseEntered
        jPanel10.setBackground(new Color(153, 153, 255, 70));
    }//GEN-LAST:event_jPanel10MouseEntered

    private void jPanel12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel12MouseEntered
        jPanel12.setBackground(new Color(153, 153, 255, 70));
    }//GEN-LAST:event_jPanel12MouseEntered

    private void jPanel12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel12MouseExited
        jPanel12.setBackground(Color.WHITE);
    }//GEN-LAST:event_jPanel12MouseExited

    private void jPanel10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseExited
        jPanel10.setBackground(Color.WHITE);
    }//GEN-LAST:event_jPanel10MouseExited

    private void jPanel11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel11MouseExited
        jPanel11.setBackground(Color.WHITE);
    }//GEN-LAST:event_jPanel11MouseExited

    private void pnExpedicaoEmPreparacaoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnExpedicaoEmPreparacaoMouseExited
        pnExpedicaoEmPreparacao.setBackground(Color.WHITE);
    }//GEN-LAST:event_pnExpedicaoEmPreparacaoMouseExited

    private void jPanel7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseExited
        jPanel7.setBackground(Color.WHITE);
    }//GEN-LAST:event_jPanel7MouseExited

    private void jPanel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseExited
        jPanel1.setBackground(Color.WHITE);
    }//GEN-LAST:event_jPanel1MouseExited

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        carregaTabelaExpedicao(0);
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jPanel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseClicked
        carregaTabelaExpedicao(1);
    }//GEN-LAST:event_jPanel7MouseClicked

    private void pnExpedicaoEmPreparacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnExpedicaoEmPreparacaoMouseClicked
        carregaTabelaExpedicao(2);
    }//GEN-LAST:event_pnExpedicaoEmPreparacaoMouseClicked

    private void jPanel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel11MouseClicked
        carregaTabelaExpedicao(3);
    }//GEN-LAST:event_jPanel11MouseClicked

    private void jPanel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseClicked
        carregaTabelaExpedicao(5);
    }//GEN-LAST:event_jPanel10MouseClicked

    private void jPanel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel12MouseClicked
        carregaTabelaExpedicao(4);
    }//GEN-LAST:event_jPanel12MouseClicked

    private void tbExpedicaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbExpedicaoKeyPressed
        if (evt.getKeyCode() == evt.VK_DELETE) {
            try {
                int rowIndex = tbExpedicao.getSelectedRow();
                int idExpedicao = (int) tbExpedicao.getValueAt(rowIndex, 0);
                JOptionPane.showMessageDialog(rootPane,
                        "Não é permitido deletar por expedição\nVá em transações e delete o item " + idExpedicao + " por lá!", "Aviso",
                        JOptionPane.WARNING_MESSAGE);
            } catch (Exception e) {
                System.out.println("erro");
            }

        }
    }//GEN-LAST:event_tbExpedicaoKeyPressed

    private void btnBuscarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarRelatorioActionPerformed
        carregarTabelaRelatorio("" + txtBuscarRelatorio.getText());
    }//GEN-LAST:event_btnBuscarRelatorioActionPerformed

    private void txtBuscarRelatorioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarRelatorioKeyReleased
        if (evt.getKeyCode() == evt.VK_ENTER) {
            btnBuscarRelatorio.doClick();
        }
    }//GEN-LAST:event_txtBuscarRelatorioKeyReleased

    private void tbRelatorioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbRelatorioKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tbRelatorioKeyReleased

    private void tbRelatorioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbRelatorioMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbRelatorioMouseClicked

    private void txtBuscarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarRelatorioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarRelatorioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Principal().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarObservacao;
    private javax.swing.JButton btnAdicionarProdutoTransacao;
    private javax.swing.JButton btnBuscaCliente;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarRelatorio;
    private javax.swing.JButton btnBuscarTransacoes;
    private javax.swing.JButton btnNovaTransacao;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnNovoCliente;
    private javax.swing.JButton btnSalvarTransacao;
    private javax.swing.JButton btnTransacaoPegaData;
    private javax.swing.JButton btnTransacaoPegaHora;
    private javax.swing.JComboBox<CFOP> cbCfop;
    private javax.swing.JComboBox<Cliente> cbCliente;
    private javax.swing.JComboBox<String> cbSelecionaTipoTransacao;
    private javax.swing.JComboBox<String> cbSelecionaTipoTransacaoRelatorio;
    private javax.swing.JComboBox<TipoNota> cbTipoTransacao;
    private javax.swing.JComboBox<Produto> cbTransacaoProduto;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblAguardando;
    private javax.swing.JLabel lblConfiguracoes;
    private javax.swing.JLabel lblConfiguracoesCfop;
    private javax.swing.JLabel lblConfiguracoesNcm;
    private javax.swing.JLabel lblConfiguracoesUnidades;
    private javax.swing.JLabel lblCriado;
    private javax.swing.JLabel lblDashBoard;
    private javax.swing.JLabel lblEmpresas;
    private javax.swing.JLabel lblEnviado;
    private javax.swing.JLabel lblExpedicaoTodasSubTitulo;
    private javax.swing.JLabel lblExpedicaoTodasTitulo;
    private javax.swing.JLabel lblItensValorTotal;
    private javax.swing.JLabel lblPendente;
    private javax.swing.JLabel lblPreparacao;
    private javax.swing.JLabel lblProdutos;
    private javax.swing.JLabel lblPronto;
    private javax.swing.JLabel lblRelatorios;
    private javax.swing.JLabel lblSairSistema;
    private javax.swing.JLabel lblSubTitulo;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblTituloCliente;
    private javax.swing.JLabel lblTransacoes;
    private javax.swing.JPanel pnAzul;
    private javax.swing.JPanel pnConfiguracao;
    private javax.swing.JPanel pnConfiguracoesNcm;
    private javax.swing.JPanel pnConfiguracoesUnidades;
    private javax.swing.JPanel pnEmpresa;
    private javax.swing.JPanel pnExpedicao;
    private javax.swing.JPanel pnExpedicaoEmPreparacao;
    private javax.swing.JPanel pnExpedicaoTodas;
    private javax.swing.JPanel pnMenuLateral;
    private javax.swing.JPanel pnNovaTransacao;
    private javax.swing.JPanel pnPrincipal;
    private javax.swing.JPanel pnProduto;
    private javax.swing.JPanel pnRelatorio;
    private javax.swing.JPanel pnTela;
    private javax.swing.JPanel pnTransacao;
    private javax.swing.JLayeredPane pncPrincipal;
    private javax.swing.JScrollPane spMenuLateral;
    private javax.swing.JTable tbCliente;
    private javax.swing.JTable tbExpedicao;
    private javax.swing.JTable tbItemTransacao;
    private javax.swing.JTable tbProduto;
    private javax.swing.JTable tbRelatorio;
    private javax.swing.JTable tbTransacoes;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtBuscarCliente;
    private javax.swing.JTextField txtBuscarRelatorio;
    private javax.swing.JTextField txtBuscarTransacao;
    private javax.swing.JTextField txtIdProdutoTransacao;
    private javax.swing.JTextField txtTransacaoChave;
    private javax.swing.JTextField txtTransacaoData;
    private javax.swing.JTextField txtTransacaoHora;
    private javax.swing.JTextField txtTransacaoNota;
    // End of variables declaration//GEN-END:variables

    public void chamaPainel(int pn) {
        pnExpedicao.setVisible(pn == 1);
        pnProduto.setVisible(pn == 2);
        pnTransacao.setVisible(pn == 3);
        pnRelatorio.setVisible(pn == 4);
        pnConfiguracao.setVisible(pn == 5);
        pnNovaTransacao.setVisible(pn == 6);
        pnAzul.setVisible(pn == 7);
        pnEmpresa.setVisible(pn == 8);
    }

    public void eventoSairPrograma() {

        Object[] options = {"Sim", "Não"};
        if (JOptionPane.showOptionDialog(null, "Deseja realmente sair?",
                "Saída", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE,
                null, options, options[1]) == 0) {
            System.exit(0);
        }

    }

    public void eventoFazerLogOut() {

        int i = JOptionPane.showConfirmDialog(null,
                "Deseja realmente trocar usuario?", "Log Out",
                JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (i == JOptionPane.YES_OPTION) {

        }
    }

    public void carregaTabelaProduto() {
        List<Produto> listaDeProdutos = produtoController.filtrarProdutos(txtBuscar.getText());
        ProdutoTableModel tableModel = new ProdutoTableModel(listaDeProdutos); // Substitua "listarProdutos" pelos seus dados
        tbProduto.setModel(tableModel);
    }

    private void populaTransacao() throws SQLException {
        populaProdutos();
        populaCbTipoNota();
        populaCbCfop();
        populaCbCliente();
        populaCbProduto("");
    }

    private void populaCbTipoNota() {
        DefaultComboBoxModel<TipoNota> model = new DefaultComboBoxModel<>(TipoNota.values());
        cbTipoTransacao.setModel(model);
    }

    private void populaCbCfop() throws SQLException {
        CFOPController cfopController = new CFOPController();
        DefaultComboBoxModel<CFOP> model = new DefaultComboBoxModel<>();
        for (CFOP cfop : cfopController.listarCFOPsAtivos()) {
            model.addElement(cfop);
        }
        cbCfop.setModel(model);
    }

    private void populaCbCliente() throws SQLException {
        ClienteController clienteController = new ClienteController();
        DefaultComboBoxModel<Cliente> model = new DefaultComboBoxModel<>();
        for (Cliente cliente : clienteController.listarClientes()) {
            model.addElement(cliente);
        }
        cbCliente.setModel(model);

    }

    private void populaProdutos() throws SQLException {
        produtoController.popularProdutos();
    }

    private void populaCbProduto(String busca) throws SQLException {

        DefaultComboBoxModel<Produto> model = new DefaultComboBoxModel<>();
        for (Produto produto : produtoController.filtrarProdutosAtivos(busca)) {
            model.addElement(produto);
        }
        cbTransacaoProduto.setModel(model);

    }

    private void salvarTransacao() {

        TipoNota tipoNota = (TipoNota) cbTipoTransacao.getSelectedItem();

        CFOP cfop = (CFOP) cbCfop.getSelectedItem();

        Cliente cliente = (Cliente) cbCliente.getSelectedItem();
        String nota = txtTransacaoNota.getText();
        String chave = txtTransacaoChave.getText();
        if (chave.length() > 54) {
            chave = chave.substring(0, 54);
        }

        transacaoController.atualizarTipoParaTodosItens(tipoNota);
        for (Item item : transacaoController.listarItens()) {
            System.out.println("ITEM:::" + item);
        }

        String dataTexto = txtTransacaoData.getText();
        String horaTexto = txtTransacaoHora.getText();

        String dataStr = "12/02/2023";
        String formato = "dd/MM/yyyy";

        if (isDataValid(dataStr, formato)) {
            System.out.println("Data válida.");
            try {
                DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                Date data = new Date(dateFormat.parse(dataTexto).getTime());

                DateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                Time hora = new Time(timeFormat.parse(horaTexto).getTime());

                // Agora você tem os objetos Date e Time com a data e a hora analisadas dos JTextField.
                Transacao transacao;
                transacao = new Transacao(0, tipoNota, cfop, cliente,
                        nota, chave, data,
                        hora, informacoesComplementares, motorista, transacaoController.listarItens());

                if (transacaoController.salvarTransacao(transacao)) {
                    JOptionPane.showMessageDialog(rootPane,
                            "Trasanção salva com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    transacaoController.limparItens();
                    carregarTabelaItemTransacao();
                    limparCamposTransacao();
                }
            } catch (ParseException e) {
                // Lida com exceções se o formato não for válido
                System.out.println("ERRO\nOcorreu um erro em data ou hora \n" + e);
                JOptionPane.showMessageDialog(rootPane,
                        "Ocorreu um erro em data ou hora.\nData e hota não podem ser vazios.", "Aviso", JOptionPane.WARNING_MESSAGE);

            }
        } else {
            System.out.println("Data inválida.");
        }

    }

    public void carregaTabelaTransacao() {
        List<Transacao> listaDeTransacoes = transacaoController.listarTransacoesComFiltro(txtBuscarTransacao.getText(),
                cbSelecionaTipoTransacao.getSelectedIndex());
        TransacaoTableModel tableModel = new TransacaoTableModel(listaDeTransacoes);
        tbTransacoes.setModel(tableModel);
        tbTransacoes.getColumnModel().getColumn(6).setCellRenderer(new LocalDateRenderer());
        tbTransacoes.getColumnModel().getColumn(7).setCellRenderer(new HoraCellRenderer());
    }

    public void carregarTabelaItemTransacao() {
        List<Item> listaDeItens = transacaoController.listarItens();
        ItemTableModel tableModel = new ItemTableModel(listaDeItens);
        tbItemTransacao.setModel(tableModel);
        lblItensValorTotal.setText("" + transacaoController.itensValorTotal());
    }

    public void limparCamposTransacao() {
        txtTransacaoNota.setText("");
        txtTransacaoChave.setText("");
        txtTransacaoData.setText("");
        txtTransacaoHora.setText("");
        txtIdProdutoTransacao.setText("");
        btnSalvarTransacao.setText("SALVAR");
        idDessaTransacao = 0;
        informacoesComplementares = "";
        motorista = "";
    }

    public void carregarCamposTransacao(Transacao transacao) {
        idDessaTransacao = transacao.getId();
        txtTransacaoNota.setText(transacao.getNota());
        txtTransacaoChave.setText(transacao.getChave());
        txtTransacaoData.setText("" + DataConverter.dataParaString("" + transacao.getData()));
        txtTransacaoHora.setText("" + transacao.getHora());

        transacaoController.listarItensAtivosDaTransacao(transacao.getId());
        carregarTabelaItemTransacao();
        txtIdProdutoTransacao.setText("");

        motorista = transacao.getMotorista();
        informacoesComplementares = transacao.getInformacoesComplementares();

        Cliente clienteDaTransacao = transacao.getCliente();
        for (int i = 0; i < cbCliente.getItemCount(); i++) {
            Cliente clienteNoComboBox = (Cliente) cbCliente.getItemAt(i);
            if (clienteDaTransacao.getId() == clienteNoComboBox.getId()) {
                cbCliente.setSelectedIndex(i);
                break;
            }
        }

        CFOP cfopDaTransacao = transacao.getCfop();
        for (int i = 0; i < cbCfop.getItemCount(); i++) {
            CFOP cfopNoComboBox = (CFOP) cbCfop.getItemAt(i);
            if (cfopDaTransacao.getId() == cfopNoComboBox.getId()) {
                cbCfop.setSelectedIndex(i);
                break;
            }
        }
        cbCfop.setSelectedItem(transacao.getCfop());
        cbTipoTransacao.setSelectedItem(transacao.getTipo());
    }

    public void liberarCamposTransacao(boolean status) {
        txtTransacaoNota.setEnabled(status);
        txtTransacaoChave.setEnabled(status);
        txtTransacaoData.setEnabled(status);
        txtTransacaoHora.setEnabled(status);
        tbItemTransacao.setEnabled(status);
        btnTransacaoPegaData.setEnabled(status);
        btnTransacaoPegaHora.setEnabled(status);
        btnAdicionarProdutoTransacao.setEnabled(status);
        txtIdProdutoTransacao.setEnabled(status);
        cbTransacaoProduto.setEnabled(status);
        cbTipoTransacao.setEnabled(status);
        cbCfop.setEnabled(status);
        cbCliente.setEnabled(status);

    }

    public void carregaTabelaEmpresa() {
        ClienteController clienteController = new ClienteController();
        List<Cliente> listaDeEmpresa = clienteController.listarClientes();
//                transacaoController.listarTransacoesComFiltro(txtBuscarTransacao.getText(), cbSelecionaTipoTransacao.getSelectedIndex());
        ClienteTableModel tableModel = new ClienteTableModel(listaDeEmpresa);
        tbCliente.setModel(tableModel);
//        tbCliente.getColumnModel().getColumn(6).setCellRenderer(new LocalDateRenderer());
//        tbCliente.getColumnModel().getColumn(7).setCellRenderer(new HoraCellRenderer());
    }

    public void carregaTabelaExpedicao(int status) {
        try {
            ExpedicaoController expedicaoController = new ExpedicaoController();
            List<Transacao> expedicao = expedicaoController.listarTransacoesComFiltro("", status);

            ExpedicaoTableModel tableModel = new ExpedicaoTableModel(expedicao);
            tbExpedicao.setModel(tableModel);
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        carregaQuantidadeDeTransacao();
    }

    public void carregaQuantidadeDeTransacao() {
        ExpedicaoController expedicaoController;
        Expedicao expedicao;
        try {
            expedicaoController = new ExpedicaoController();
            expedicao = expedicaoController.quantidadeDeTransacao();
            lblCriado.setText("" + expedicao.getCriado());
            lblPendente.setText("" + expedicao.getPendente());
            lblPreparacao.setText("" + expedicao.getPreparacao());
            lblPronto.setText("" + expedicao.getPronto());
            lblAguardando.setText("" + expedicao.getAguardando());
            lblEnviado.setText("" + expedicao.getEnviado());

        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void carregarTabelaRelatorio(String busca) {
        List<Item> listaDeItens = transacaoController.listarTodosItensAtivos(busca,
                cbSelecionaTipoTransacaoRelatorio.getSelectedIndex());
        TransacaoRelatorioTableModel tableModel = new TransacaoRelatorioTableModel(listaDeItens);
        tbRelatorio.setModel(tableModel);
// Obtém o modelo de coluna da tabela
        TableColumnModel columnModel = tbRelatorio.getColumnModel();
// Define a largura desejada para a segunda coluna
        int larguraDesejada = 400; // Largura desejada em pixels
        int colunaIndex = 5; // Índice da coluna, supondo que seja a segunda coluna (0 indexada)
// Define a largura preferida da coluna
        columnModel.getColumn(colunaIndex).setPreferredWidth(larguraDesejada);
        txtBuscarRelatorio.requestFocus();
    }

    public void exibeTransacao(int idExibir) {
        if (idExibir != 0) {
            Transacao transacao = transacaoController.obterTransacaoPorId(idExibir);
            chamaPainel(6);
            transacaoController.limparItens();
            carregarCamposTransacao(transacao);
            liberarCamposTransacao(false);
            btnSalvarTransacao.setText("Gerar uma cópia");
            mostraBotoesTransacao(false);
        }
    }

    private void mostraBotoesTransacao(Boolean esconder) {
        btnSalvarTransacao.setVisible(esconder);
        btnAdicionarObservacao.setVisible(esconder);
    }
}
