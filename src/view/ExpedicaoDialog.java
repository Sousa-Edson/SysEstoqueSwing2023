/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import controller.TransacaoController;
import enums.StatusNota;
import java.sql.Date;
import java.sql.SQLException;
import java.sql.Time;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.Transacao;
import util.DataConverter;
import static util.DataValidator.isDataValid;

/**
 *
 * @author edson
 */
public class ExpedicaoDialog extends javax.swing.JDialog {

    int exibirId = 0;
    Transacao expedicao = new Transacao();

    public ExpedicaoDialog(java.awt.Frame parent, boolean modal) throws SQLException {
        super(parent, modal);
        initComponents();
        txtNumeroNota.requestFocus();
        populaCbStatusNota();
        liberaCampos(false);
    }

    public ExpedicaoDialog(java.awt.Frame parent, boolean modal, Transacao transacao) throws SQLException {
        super(parent, modal);
        initComponents();
        txtNumeroNota.requestFocus();
        txtIdTransacao.setText("" + transacao.getId());
        txtChaveNota.setText("" + transacao.getChave());
        txtMotorista.setText("" + transacao.getMotorista());
        txtNumeroNota.setText("" + transacao.getNota());
        txtObservacao.setText("" + transacao.getInformacoesComplementares());
        populaCbStatusNota();
        
        txtTransacaoData.setText("" + DataConverter.dataParaString("" + transacao.getData()));
        txtTransacaoHora.setText("" + transacao.getHora());

        cbStatusTransacao.setSelectedItem(transacao.getStatus());
        expedicao = transacao;
        liberaCampos(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnPrincipal = new javax.swing.JPanel();
        lblSiglaUnidade = new javax.swing.JLabel();
        txtNumeroNota = new javax.swing.JTextField();
        lblDescricaoUnidade = new javax.swing.JLabel();
        txtChaveNota = new javax.swing.JTextField();
        lblIdUnidade = new javax.swing.JLabel();
        txtIdTransacao = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservacao = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        txtMotorista = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtTransacaoData = new javax.swing.JTextField();
        btnTransacaoPegaData = new javax.swing.JButton();
        txtTransacaoHora = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnTransacaoPegaHora = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cbStatusTransacao = new javax.swing.JComboBox<>();
        btnEnviadoAgora = new javax.swing.JButton();
        btnMotorista = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EXPEDIÇÃO");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnPrincipal.setBackground(new java.awt.Color(255, 255, 255));

        lblSiglaUnidade.setText("NOTA");

        lblDescricaoUnidade.setText("CHAVE");

        lblIdUnidade.setText("ID");

        txtIdTransacao.setText("0");
        txtIdTransacao.setEnabled(false);

        jLabel1.setText("OBSERVAÇÂO");

        txtObservacao.setColumns(20);
        txtObservacao.setLineWrap(true);
        txtObservacao.setRows(5);
        jScrollPane1.setViewportView(txtObservacao);

        jLabel2.setText("MOTORISTA");

        btnSalvar.setBackground(new java.awt.Color(0, 255, 0));
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-salvar-22.png"))); // NOI18N
        btnSalvar.setText("SALVAR");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-visível-24.png"))); // NOI18N
        jButton6.setText("EXIBIR");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel8.setText("DATA");

        btnTransacaoPegaData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-calendário-24.png"))); // NOI18N
        btnTransacaoPegaData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransacaoPegaDataActionPerformed(evt);
            }
        });

        jLabel9.setText("HORA");

        btnTransacaoPegaHora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-tempo-24.png"))); // NOI18N
        btnTransacaoPegaHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransacaoPegaHoraActionPerformed(evt);
            }
        });

        jLabel4.setText("STATUS");

        cbStatusTransacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStatusTransacaoActionPerformed(evt);
            }
        });

        btnEnviadoAgora.setBackground(new java.awt.Color(204, 153, 255));
        btnEnviadoAgora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-enviado-24.png"))); // NOI18N
        btnEnviadoAgora.setText("ENVIADO AGORA");
        btnEnviadoAgora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviadoAgoraActionPerformed(evt);
            }
        });

        btnMotorista.setText("*");
        btnMotorista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMotoristaActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-editar-24.png"))); // NOI18N
        jButton2.setText("EDITAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnPrincipalLayout = new javax.swing.GroupLayout(pnPrincipal);
        pnPrincipal.setLayout(pnPrincipalLayout);
        pnPrincipalLayout.setHorizontalGroup(
            pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnPrincipalLayout.createSequentialGroup()
                        .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnPrincipalLayout.createSequentialGroup()
                                .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnPrincipalLayout.createSequentialGroup()
                                        .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblIdUnidade)
                                            .addComponent(txtIdTransacao, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNumeroNota, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblSiglaUnidade))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtChaveNota, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblDescricaoUnidade)))
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPrincipalLayout.createSequentialGroup()
                                        .addComponent(txtTransacaoData)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnTransacaoPegaData))
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPrincipalLayout.createSequentialGroup()
                                        .addComponent(txtTransacaoHora, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnTransacaoPegaHora))
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnPrincipalLayout.createSequentialGroup()
                                .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(pnPrincipalLayout.createSequentialGroup()
                                        .addComponent(txtMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnMotorista)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnPrincipalLayout.createSequentialGroup()
                                        .addComponent(cbStatusTransacao, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton2)))))
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPrincipalLayout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEnviadoAgora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnPrincipalLayout.setVerticalGroup(
            pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnPrincipalLayout.createSequentialGroup()
                        .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIdUnidade)
                            .addComponent(lblSiglaUnidade)
                            .addComponent(lblDescricaoUnidade))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdTransacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumeroNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtChaveNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addGroup(pnPrincipalLayout.createSequentialGroup()
                        .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTransacaoData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTransacaoHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTransacaoPegaData)
                            .addComponent(btnTransacaoPegaHora))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnPrincipalLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(30, 30, 30))
                        .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbStatusTransacao, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)
                            .addComponent(btnMotorista)
                            .addComponent(txtMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(17, 17, 17)
                .addGroup(pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnviadoAgora)
                    .addComponent(btnSalvar)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnPrincipalLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnTransacaoPegaData, btnTransacaoPegaHora, jButton2, txtChaveNota, txtIdTransacao, txtNumeroNota, txtTransacaoData, txtTransacaoHora});

        pnPrincipalLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnMotorista, cbStatusTransacao, txtMotorista});

        pnPrincipalLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnEnviadoAgora, btnSalvar, jButton6});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (txtIdTransacao.getText().equals("0")) {
            JOptionPane.showMessageDialog(rootPane,
                    "Erro não foi selecionado uma transação!", "Ops",
                    JOptionPane.WARNING_MESSAGE);

        } else {
            try {
                salvar();
            } catch (SQLException ex) {
                Logger.getLogger(ExpedicaoDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnTransacaoPegaDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransacaoPegaDataActionPerformed
        dataAtual();
    }//GEN-LAST:event_btnTransacaoPegaDataActionPerformed

    private void btnTransacaoPegaHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransacaoPegaHoraActionPerformed
        horaAtual();
    }//GEN-LAST:event_btnTransacaoPegaHoraActionPerformed

    private void cbStatusTransacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStatusTransacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbStatusTransacaoActionPerformed

    private void btnEnviadoAgoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviadoAgoraActionPerformed
        cbStatusTransacao.setSelectedItem(StatusNota.ENVIADO);
        horaAtual();
        dataAtual();
    }//GEN-LAST:event_btnEnviadoAgoraActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        liberaCampos(!txtChaveNota.isEnabled());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnMotoristaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMotoristaActionPerformed
        JOptionPane.showMessageDialog(null, "Funcionalidade em desenvolvimento!");
    }//GEN-LAST:event_btnMotoristaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        exibirId = expedicao.getId();
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpedicaoDialog.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpedicaoDialog.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpedicaoDialog.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpedicaoDialog.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ExpedicaoDialog dialog = null;
                try {
                    dialog = new ExpedicaoDialog(new javax.swing.JFrame(), true);

                } catch (SQLException ex) {
                    Logger.getLogger(ExpedicaoDialog.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviadoAgora;
    private javax.swing.JButton btnMotorista;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnTransacaoPegaData;
    private javax.swing.JButton btnTransacaoPegaHora;
    private javax.swing.JComboBox<StatusNota> cbStatusTransacao;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDescricaoUnidade;
    private javax.swing.JLabel lblIdUnidade;
    private javax.swing.JLabel lblSiglaUnidade;
    private javax.swing.JPanel pnPrincipal;
    private javax.swing.JTextField txtChaveNota;
    private javax.swing.JTextField txtIdTransacao;
    private javax.swing.JTextField txtMotorista;
    private javax.swing.JTextField txtNumeroNota;
    private javax.swing.JTextArea txtObservacao;
    private javax.swing.JTextField txtTransacaoData;
    private javax.swing.JTextField txtTransacaoHora;
    // End of variables declaration//GEN-END:variables

    private void salvar() throws SQLException {
        TransacaoController transacaoController = new TransacaoController();

        String nota = txtNumeroNota.getText();
        String chave = txtChaveNota.getText();
        String dataTexto = txtTransacaoData.getText();
        String horaTexto = txtTransacaoHora.getText();
        String informacoes = txtObservacao.getText().toUpperCase();
        String motorista = txtMotorista.getText().toUpperCase();

        String dataStr = "12/02/2023";
        String formato = "dd/MM/yyyy";

        if (isDataValid(dataStr, formato)) {
            System.out.println("Data válida.");
            try {
                DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                Date data = new Date(dateFormat.parse(dataTexto).getTime());

                DateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
                Time hora = new Time(timeFormat.parse(horaTexto).getTime());

                // Agora você tem os objetos Date e Time com a data e a hora analisadas dos JTextField.
                Transacao transacao = expedicao;
                transacao.setId(expedicao.getId());
                transacao.setNota(nota);
                transacao.setChave(chave);
                transacao.setData(data);
                transacao.setHora(hora);
                transacao.setInformacoesComplementares(informacoes);
                transacao.setStatus((StatusNota) cbStatusTransacao.getSelectedItem());
                transacao.setMotorista(motorista);

                if (transacaoController.salvarExpedicao(transacao)) {
                    JOptionPane.showMessageDialog(rootPane,
                            "Trasanção salva com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                     
                }
            } catch (ParseException e) {
                // Lida com exceções se o formato não for válido
                System.out.println("ERRO\nOcorreu um erro em data ou hora \n" + e);
                JOptionPane.showMessageDialog(rootPane,
                        "Ocorreu um erro em data ou hora.\nData e hota não podem ser vazios.", "Aviso",
                        JOptionPane.WARNING_MESSAGE);
            }
        } else {
            System.out.println("Data inválida.");
        }
    }

    private void populaCbStatusNota() {
        DefaultComboBoxModel<StatusNota> model = new DefaultComboBoxModel<>();
        // Adicionando apenas os enums desejados no ComboBoxModel
        model.addElement(StatusNota.PENDENTE);
        model.addElement(StatusNota.PREPARACAO);
        model.addElement(StatusNota.AGUARDANDO_APROVACAO);
        model.addElement(StatusNota.PRONTO_PARA_COLETA);
        model.addElement(StatusNota.ENVIADO);

        cbStatusTransacao.setModel(model);
    }

    private void dataAtual() {
        LocalDate dataAtual = LocalDate.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String dataFormatada = dataAtual.format(formatter);
        txtTransacaoData.setText(dataFormatada);
    }

    private void horaAtual() {
        LocalTime horaAtual = LocalTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
        String horaFormatada = horaAtual.format(formatter);
        txtTransacaoHora.setText(horaFormatada);
    }

    private void liberaCampos(Boolean block) {
        txtNumeroNota.setEnabled(block);
        txtChaveNota.setEnabled(block);
        txtTransacaoData.setEnabled(block);
        txtTransacaoHora.setEnabled(block);
        txtObservacao.setEnabled(block);
        txtMotorista.setEnabled(block);
        cbStatusTransacao.setEnabled(block);
        btnTransacaoPegaData.setEnabled(block);
        btnTransacaoPegaHora.setEnabled(block);
        btnMotorista.setEnabled(block);
    }
}
