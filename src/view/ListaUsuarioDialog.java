/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import controller.UsuarioController;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import model.Usuario;
import model.UsuarioTableModel;
import util.GerarCodigoAleatorio;

/**
 *
 * @author edson
 */
public class ListaUsuarioDialog extends javax.swing.JDialog {

    private UsuarioController usuarioController;
    private List<Usuario> usuarios;
    int idUsuario = 0;

    /**
     * Creates new form ListaUsuarioDialog
     */
    public ListaUsuarioDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        usuarioController = new UsuarioController();
        carregaTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        spPrincipal = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Fira Sans", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LISTA DE USUÁRIOS");

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabela.getTableHeader().setReorderingAllowed(false);
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        tabela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaKeyReleased(evt);
            }
        });
        spPrincipal.setViewportView(tabela);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(spPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(225, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addComponent(spPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                    .addGap(6, 6, 6)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        int columnIndex = tabela.getSelectedColumn();
        int rowIndex = tabela.getSelectedRow();

        if (columnIndex == 3) {
            if (evt.getClickCount() == 2) {
                idUsuario = (int) tabela.getValueAt(rowIndex, 0);
                if (idUsuario == 1) {
                    JOptionPane.showMessageDialog(null, "Usuário 1 não pode ser alterado\nRegra do sistema!");
                } else {
                    Object[] options = {"COMUM", "ADMINISTRADOR"};
                    int selecionado = JOptionPane.showOptionDialog(null, "Deseja tracorar para",
                            "Tipo de usuário", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                    switch (selecionado) {
                        case 0:
                            usuarioController.atualizarTipoUsuario(idUsuario, "COMUM");
                            break;
                        case 1:
                            usuarioController.atualizarTipoUsuario(idUsuario, "ADMINISTRADOR");
                            break;
                        default:
                            break;
                    }
                    carregaTabela();
                }
            }
        }
        if (columnIndex == 4) {
            idUsuario = (int) tabela.getValueAt(rowIndex, 0);
            if (idUsuario == 1) {
                JOptionPane.showMessageDialog(null, "Usuário 1 não pode ser alterado\nRegra do sistema!");
            } else {
                boolean ativo = (boolean) tabela.getValueAt(rowIndex, 4);
                usuarioController.atualizarStatusUsuario(idUsuario, !ativo);
                carregaTabela();
            }
        }

    }//GEN-LAST:event_tabelaMouseClicked

    private void tabelaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaKeyReleased
        if (evt.getKeyCode() == evt.VK_DELETE) {

            int rowIndex = tabela.getSelectedRow(); // Obtenha a linha selecionada na tabela
            idUsuario = (int) tabela.getValueAt(rowIndex, 0); // Obtenha o ID da primeira coluna (coluna 0)
            if (idUsuario == 1) {
                JOptionPane.showMessageDialog(null, "Usuário 1 não pode ser alterado\nRegra do sistema!");
            } else {
                Object[] options = {"Sim", "Não"};
                if (JOptionPane.showOptionDialog(null, "Clique Confirmar para continuar",
                        "Deletar usuário  " + idUsuario + " ?", JOptionPane.DEFAULT_OPTION,
                        JOptionPane.WARNING_MESSAGE, null, options, options[1]) == 0) {

                    // Gerar um código aleatório
                    String codigoDeConfirmacaoAleatorio = GerarCodigoAleatorio.gerarCodigoAleatorio();
                    // Exibir um JOptionPane para obter o código
                    String codigoDeConfirmacao = JOptionPane.showInputDialog(null,
                            "Insira o código de 4 dígitos: " + codigoDeConfirmacaoAleatorio,
                            "Confirmação", JOptionPane.WARNING_MESSAGE);
                    // Comparar os códigos
                    if (codigoDeConfirmacao != null && codigoDeConfirmacao.length() == 4
                            && codigoDeConfirmacao.equals(codigoDeConfirmacaoAleatorio)) {

                        usuarioController.marcarUsuarioComoDeletado(idUsuario);
                        JOptionPane.showMessageDialog(rootPane, "Usuario " + idUsuario + " deletado com sucesso!");
                        carregaTabela();
                    } else {
                        JOptionPane.showMessageDialog(null, "Código incorreto ou invalido.");
                    }
                }
                System.out.println("delete - " + idUsuario);
            }
        }
    }//GEN-LAST:event_tabelaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaUsuarioDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaUsuarioDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaUsuarioDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaUsuarioDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListaUsuarioDialog dialog = new ListaUsuarioDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane spPrincipal;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

    private void carregaTabela() {
        List<Usuario> listDeUsuarios = usuarioController.listarUsuarios();

        UsuarioTableModel tableModel = new UsuarioTableModel(listDeUsuarios);

        tabela.setModel(tableModel);
    }
}
